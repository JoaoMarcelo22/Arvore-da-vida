import Head from "next/head";
import Footer from "@/components/Footer";
import * as S from "./styles"
import * as Yup from "yup";
import { Field, Form, Formik} from "formik";
import { Input } from "@mui/material";

export default function TemplateLogin() {

    const schema = Yup.object().shape({
        email: Yup.string().email("Adicione um email válido").required("Campo obrigatório").max(50),
        password: Yup.string().required("Campo obrigatório"),
        nome: Yup.string().required("Campo obrigatório"),
    })

    return (
    <>
        <Head>
            <title>Árvore da vida - Login</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="assets/img/jasmine.png" />
        </Head> 
            <S.Title>Árvore da vida</S.Title>
                <S.SubTitle>Faça o seu cadastro e faça parte desse conteudo incivel</S.SubTitle>
            <S.Container>
                <Formik 
                    ValidationSchema={schema}
                    initialValues={{
                        nome:'',
                        email:'',
                        password:'',
                    }}>
                        {({ erros})=> (
                            <S.ContainerForm>
                                <Form>
                                <div>
                               <S.ContainerInput>
                                    <S.Label htmlFor="nome">Nome</S.Label>
                                    <Field id="nome" name="nome" type="text"/>
                                    {erros.nome&&(
                                        <div>nome</div>
                                    )}
                                </S.ContainerInput>
                               <S.ContainerInput>
                                    <S.Label htmlFor="email">E-mail</S.Label>
                                    <Field id="email" name="email" type="email"/>
                                    {erros.email&&(
                                        <div>nome</div>
                                    )}
                                </S.ContainerInput>
                                <S.ContainerInput>
                                    <S.Label htmlFor="password">Password</S.Label>
                                    <Field id="password" name="password" type="password"/>
                                    {erros.password&&(
                                        <div>nome</div>
                                    )}
                                </S.ContainerInput>
                                </div>
                                <div>
                                <S.ContainerButton>
                                    <S.ButtonForm>Entrar</S.ButtonForm>
                                </S.ContainerButton>
                                </div>
                                </Form>
                            </S.ContainerForm>
                            )}
                </Formik>
            </S.Container>
        <Footer />
    </>
    )
}